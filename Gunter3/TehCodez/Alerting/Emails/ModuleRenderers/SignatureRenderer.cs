using System;
using System.Collections.Generic;
using System.Globalization;
using Gunter.Data;
using Gunter.Extensions;
using Gunter.Reporting;
using Gunter.Reporting.Modules;
using Reusable.MarkupBuilder;
using Reusable.MarkupBuilder.Html;

namespace Gunter.Alerting.Emails.ModuleRenderers
{
    [CanRender(typeof(Signature))]
    public class SignatureRenderer : ModuleRenderer
    {
        public override IEnumerable<IHtmlElement> Render(IModule module, TestContext context)
        {
            var format = (FormatFunc)context.Formatter.Format;

               yield return Html
                    .Element("p", p => p
                        .@class("auto-generated-by")
                        .Append("Auto-generated by ")
                        .Element("span", span => span
                            .@class("app-name")
                            .Append(format("{Program.Name}")))
                        .Append($" {DateTime.UtcNow.ToString(CultureInfo.InvariantCulture)} (UTC)"));

            //.AppendLine(Html.Element("hr", string.Empty).Style(Styles[Style.HorizonalRule]).ToHtml(MarkupFormatting.Empty, Enumerable.Empty<IMarkupVisitor>()))
        }
    }
}